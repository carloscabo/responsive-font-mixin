$small_desktop: 1240px;
$tablet: 1023px;
$mobile: 767px;
$small_mobile: 320px;

// Responsive breakpoints
@mixin media($breakpoint) {
  @media only screen and (max-width: $breakpoint) {
    @content;
  }
}

/*
Scales a font proportionally to the screen size, from -> to
All parameters are pixels, but don't add the 'px' units!

It adds mediaqueries to fix font-size upper and lower limit

@include autoscale-font (
   //  320 screen width -> font size 24px
  320,  24,
  // 1600 screen width -> font size 64px
  1600, 64
);

Outputs something like:
font-size: 64px;
font-size: calc( 24px + (64 - 24) * ( ( 100vw - 320px ) / ( 1600 - 320 ) ) );
@media only screen and (min-width: 1600px)
  .title {
    font-size: 64px;
  }
}

*/
@mixin autoscale-font (
  $list_of_breakpoints_and_sizes
) {

  $prev-bp: '';
  $prev-sz: '';
  $prev-lh: '';

  @each $bpas in $list_of_breakpoints_and_sizes {

    $bp: nth($bpas, 1); // Breakpoint
    // Remove bp unit
    @if type-of($bp) == 'number' and not unitless($bp) {
      $bp: $bp / ($bp * 0 + 1);
    }
    $sz: nth($bpas, 2); // Size
    $lh: nth($bpas, 3); // Line height

    // First rule
    // Default size on desktop
    @if $bpas == nth($list_of_breakpoints_and_sizes, 1) {
      & {
        font-size: #{$sz}px;
        line-height: #{$lh}px;
        color: orange;
      }
    }

    // Not the first, neither last
    @if $bpas != nth($list_of_breakpoints_and_sizes, 1) and $bpas != nth($list_of_breakpoints_and_sizes, length($list_of_breakpoints_and_sizes)) {
      @media only screen and (max-width: #{$bp}px) {
        & {
          font-size: #{$sz}px;
          font-size: calc( #{$sz}px + ( #{$prev-sz} - #{$sz} ) * ( ( 100vw - #{$bp}px ) / ( #{$prev-bp} - #{$bp} ) ) );
          /*font-size: calc( 24px + ( 64 - 24 ) * ( ( 100vw - 768px ) / ( 1024 - 768 ) ) );*/
          color: red;
        }
      }
    }

    // Is last item of list
    @if $bpas == nth($list_of_breakpoints_and_sizes, length($list_of_breakpoints_and_sizes)) {
      @media only screen and (max-width: #{$bp}px) {
        & {
          font-size: #{$sz}px;
          line-height: #{$lh}px;
          color: blue;
        }
      }
    } // @if

    $prev-bp: $bp;
    $prev-sz: $sz;
    $prev-lh: $lh;

  } // @each

}
